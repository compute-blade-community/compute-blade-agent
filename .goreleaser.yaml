project_name: compute-blade-agent

builds:
  - env: &env
    - CGO_ENABLED=0
    goos: &goos
    - linux
    goarch: &goarch
    - arm64
    binary: compute-blade-agent
    id: agent
    dir: ./cmd/agent/
    mod_timestamp: "{{ .CommitTimestamp }}"
    ldflags:
      - -X=main.Version={{.Version}}
      - -X=main.Commit={{.Commit}}
      - -X=main.Date={{ .CommitTimestamp }}

  - env: *env
    goos: *goos
    goarch: *goarch
    binary: bladectl
    id: bladectl
    dir: ./cmd/bladectl/
    mod_timestamp: "{{ .CommitTimestamp }}"
    ldflags:
      - -X=main.Version={{.Version}}
      - -X=main.Commit={{.Commit}}
      - -X=main.Date={{ .CommitTimestamp }}

# Docker image including both agent and bladectl
dockers:
  - id: oci-bundle
    dockerfile: Dockerfile
    goos: linux
    goarch: arm64
    ids:
    - agent
    - bladectl
    image_templates:
      - ghcr.io/github.com/uptime-industries/compute-blade-agent:latest
      - ghcr.io/github.com/uptime-industries/compute-blade-agent:{{ .Tag }}
      - ghcr.io/github.com/uptime-industries/compute-blade-agent:v{{ .Major }}
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--platform=linux/arm64"

# Sign docker-image with cosign (keyless)
docker_signs:
  - id: oci-bundle-sign
    artifacts: all
    args:
    - "sign"
    - --oidc-issuer=https://token.actions.githubusercontent.com
    - --upload=false
    - "${artifact}"
    - --yes
    ids:
    - oci-bundle

# Sign everything else
signs:
   - cmd: cosign
     signature: "${artifact}.sig"
     certificate: "${artifact}.pem"
     args:
     - sign-blob
     - --oidc-issuer=https://token.actions.githubusercontent.com
     - "--output-certificate=${certificate}"
     - "--output-signature=${signature}"
     - "${artifact}"
     artifacts: all

# Regular OS packages (for now only systemd based OSes)
nfpms:
- id: compute-blade-agent
  maintainer: Matthias Riegler <me@xvzf.tech>
  description: compute-blade Agent
  homepage: https://github.com/github.com/uptime-industries/compute-blade-agent
  license: Apache 2.0
  formats:
  - deb
  - rpm
  - archlinux
  bindir: /usr/bin
  contents:
  - src: ./hack/systemd/compute-blade-agent.service
    dst: /etc/systemd/system/compute-blade-agent.service
  - src: ./cmd/agent/default-config.yaml
    dst: /etc/compute-blade-agent/config.yaml
    type: config
  - src: ./fanunit.uf2
    dst: /usr/share/compute-blade-agent/fanunit.uf2

release:
  extra_files:
    - glob: ./fanunit.uf2
